AWSTemplateFormatVersion: 2010-09-09
Resources:
  NextBucket:
    Type: 'AWS::S3::Bucket'
    Properties: {}
  NextBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref NextBucket
      PolicyDocument:
        Statement:
          - Action: s3:GetObject
            Effect: Allow
            Resource: !Sub ${NextBucket.Arn}/*
            Principal:
              Service: cloudfront.amazonaws.com
            Condition:
              StringEquals:
                AWS:SourceArn: !Sub arn:aws:cloudfront::${AWS::AccountId}:distribution/${NextCloudFrontDistribution}
  NextCloudFrontDistribution:
    Type: 'AWS::CloudFront::Distribution'
    Properties:
      DistributionConfig:
        CacheBehaviors:
          - PathPattern: api/*
            AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
            TargetOriginId: NextBackend
            ViewerProtocolPolicy: allow-all
            CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6
        DefaultCacheBehavior:
          TargetOriginId: MyCDN
          ViewerProtocolPolicy: 'redirect-to-https'
          CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6
        Enabled: true
        Origins:
          - Id: MyCDN
            DomainName: !GetAtt NextBucket.RegionalDomainName
            S3OriginConfig:
              OriginAccessIdentity: ""
            OriginAccessControlId: !GetAtt NextCloudFrontOAC.Id
          - Id: NextBackend
            DomainName: !Sub '${NextApiGateway}.execute-api.${AWS::Region}.amazonaws.com'
            OriginPath: '/dev'
            CustomOriginConfig:
              OriginProtocolPolicy: https-only
    DependsOn:
      - NextBucket
      - NextApiGateway
  NextCloudFrontOAC:
    Type: 'AWS::CloudFront::OriginAccessControl'
    Properties:
      OriginAccessControlConfig:
        Name: "mycdn-access-identity"
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4
  NextApiGateway:
    Type: 'AWS::ApiGateway::RestApi'
    Properties:
      Description: Nextjs API Gateway
      Name: NextjsApiGateway
      EndpointConfiguration:
        Types:
          - REGIONAL
  NextApiMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      HttpMethod: ANY
      ResourceId: !GetAtt NextApiGateway.RootResourceId
      RestApiId: !Ref NextApiGateway
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: ANY
        Type: AWS_PROXY
        Uri: !Sub >-
          arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${NextLambda.Arn}/invocations
  NextApiDeployment:
    DependsOn:
      - NextApiMethod
    Type: 'AWS::ApiGateway::Deployment'
    Properties:
      RestApiId: !Ref NextApiGateway
      StageName: dev
  NextLambda:
    Type: 'AWS::Lambda::Function'
    Properties:
      Runtime: nodejs18.x
      Role: !GetAtt NextLambdaExecutionRole.Arn
      Handler: run.sh
      Code:
        S3Bucket: nextjs-lambda-1234
        S3Key: lambda.zip
      Layers:
        - !Sub 'arn:aws:lambda:${AWS::Region}:753240598075:layer:LambdaAdapterLayerX86:3'
      Environment:
        Variables:
          AWS_LAMBDA_EXEC_WRAPPER: /opt/bootstrap
      Description: Lambda running Nextjs
      TracingConfig:
        Mode: Active
  NextLambdaExecutionRole:                            # https://docs.aws.amazon.com/lambda/latest/dg/lambda-intro-execution-role.html
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:*
                Resource: arn:aws:logs:*:*:*
  NextLambdaApiGatewayInvoke:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: "lambda:InvokeFunction"
      FunctionName: !Ref NextLambda
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${NextApiGateway}/*
Outputs:
  NextBucketName:
    Value: !Ref NextBucket
    Description: Name of S3 bucket to hold static content
  NextLambdaName:
    Value: !Ref NextLambda
    Description: Name of Lambda which will execute Nextjs